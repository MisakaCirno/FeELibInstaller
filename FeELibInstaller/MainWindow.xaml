<Window x:Class="FeELibInstaller.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FeELibInstaller"
        mc:Ignorable="d"
        Title="FeE Lib Installer v0.1" 
        Height="300" Width="400"
        WindowStartupLocation="CenterScreen"
        ResizeMode="CanMinimize"
        Loaded="Window_Loaded"
        Background="#1e1e1e" Foreground="#ffffff">
    <Window.Resources>
        <Style x:Key="Close_Button_Style" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="#323233"/>
            <Setter Property="BorderBrush" Value="#323233"/>
            <Setter Property="Foreground" Value="#8e8e8e"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#e81123"/>
                                <Setter Property="Foreground" Value="#ffffff" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#a2222c"/>
                                <Setter Property="Foreground" Value="#ffffff" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="Help_Button_Style" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="#323233"/>
            <Setter Property="BorderBrush" Value="#323233"/>
            <Setter Property="Foreground" Value="#8e8e8e"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#22C07C"/>
                                <Setter Property="Foreground" Value="#ffffff" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#18935E"/>
                                <Setter Property="Foreground" Value="#ffffff" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="Start_Button_Style" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="#0e639c"/>
            <Setter Property="BorderBrush" Value="#0e639c"/>
            <Setter Property="Foreground" Value="#ffffff"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="5"
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" 
                                              Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#1177bb"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#0C5382"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="White" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="Base_CheckBox_Template" TargetType="{x:Type CheckBox}">
            <Border x:Name="backgroudnBorder" CornerRadius="5" 
                    Background="{TemplateBinding Background}" 
                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True" Margin="{TemplateBinding Padding}">
                    <ContentPresenter x:Name="contentPresenter" 
                                      Focusable="False" 
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      RecognizesAccessKey="True" 
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="HasContent" Value="true">
                    <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter TargetName="backgroudnBorder" Property="Background" Value="#333333"/>
                    <Setter TargetName="backgroudnBorder" Property="BorderBrush" Value="White"/>
                    <Setter TargetName="contentPresenter" Property="TextBlock.Foreground" Value="White"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter TargetName="backgroudnBorder" Property="Background" Value="#222222"/>
                    <Setter TargetName="backgroudnBorder" Property="BorderBrush" Value="#b0b0b0"/>
                    <Setter TargetName="contentPresenter" Property="TextBlock.Foreground" Value="#b0b0b0"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter TargetName="backgroudnBorder" Property="Background" Value="#1e1e1e"/>
                    <Setter TargetName="backgroudnBorder" Property="BorderBrush" Value="#00CC00"/>
                    <Setter TargetName="contentPresenter" Property="TextBlock.Foreground" Value="#00CC00"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="{x:Null}">
                    <Setter TargetName="backgroudnBorder" Property="Background" Value="Red"/>
                    <Setter TargetName="backgroudnBorder" Property="BorderBrush" Value="Red"/>
                    <Setter TargetName="contentPresenter" Property="TextBlock.Foreground" Value="Blue"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Window.Resources>

    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="35" UseAeroCaptionButtons="False"/>
    </WindowChrome.WindowChrome>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="35"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Border Background="#323233">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Button x:Name="Help_Button" Style="{DynamicResource Help_Button_Style}" 
                        Content="施法咒语" Padding="18,0" WindowChrome.IsHitTestVisibleInChrome="True"
                        Click="Help_Button_Click" Visibility="Hidden"/>


                <TextBlock Text="FeE Lib 召唤器 v0.1" Grid.Column="1"
                           HorizontalAlignment="Center" VerticalAlignment="Center"
                           FontSize="14" FontStretch="Condensed"/>

                <Button x:Name="Close_Button" Style="{DynamicResource Close_Button_Style}" Grid.Column="2" 
                        Content="放弃召唤" Padding="18,0" WindowChrome.IsHitTestVisibleInChrome="True"
                        Click="Close_Button_Click"/>
            </Grid>
        </Border>

        <!-- 窗体部分 -->
        <Grid Grid.Row="1" Margin="5">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Border x:Name="Drag_Border" BorderThickness="1" BorderBrush="#007fd4" CornerRadius="5" Margin="2"
                     AllowDrop="true" Drop="Drag_Border_Drop" PreviewDragOver="Drag_Border_PreviewDragOver" Background="#1e1e1e">
                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" Margin="5">
                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                        <TextBlock x:Name="Notify_TextBlock" Visibility="Collapsed"
                               HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center">
                        <Run Text="请将召唤素材"/>
                        <LineBreak/>
                        <Run Text="从Github上下载完成" Foreground="Salmon" FontWeight="Bold"/>
                        <Run Text="并解压了的文件夹" Foreground="Orange" FontWeight="Bold"/>
                        <LineBreak/>
                        <LineBreak/>
                        <Run Text="拖拽到这里" Foreground="LightGreen" FontWeight="Bold" FontSize="16"/>
                        <LineBreak/>
                        <LineBreak/>
                        <Run Text="注：文件夹默认的名称为"/>
                        <LineBreak/>
                        <Run Text="FeELib-for-Houdini-master" Foreground="CornflowerBlue" FontWeight="Bold"/>
                        </TextBlock>

                        <TextBlock x:Name="NotifyFile_TextBlock" Text="FeELib.json 的坐标" FontWeight="Bold"
                               HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center"/>

                        <TextBlock x:Name="FilePath_TextBlock" Margin="5"
                               HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center"
                               Foreground="LightBlue"
                               Text="等待施法中……"
                               TextWrapping="WrapWithOverflow"/>

                        <TextBlock x:Name="NotifyTargetFile_TextBlock" Text="FeE.json 的坐标" FontWeight="Bold"
                               HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center"/>

                        <TextBlock x:Name="FileTargetPath_TextBlock" Margin="5"
                               HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center"
                               Foreground="LightGreen"
                               Text="等待施法中……"
                               TextWrapping="WrapWithOverflow"/>
                    </StackPanel>
                </ScrollViewer>
            </Border>

            <Grid x:Name="VersionSelector_Grid" Grid.Row="1" Margin="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <TextBlock Text="将FeE Lib召唤至" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5"/>

                <StackPanel x:Name="Version_StackPanel" Grid.Row="1" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                    <StackPanel.Resources>
                        <Style TargetType="CheckBox">
                            <Setter Property="Foreground" Value="#8e8e8e" />
                            <Setter Property="Background" Value="#1e1e1e" />
                            <Setter Property="BorderBrush" Value="#7D7D80" />
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Setter Property="Padding" Value="15,5"/>
                            <Setter Property="Margin" Value="2,5"/>
                            <Setter Property="Template" Value="{DynamicResource Base_CheckBox_Template}"/>
                        </Style>
                    </StackPanel.Resources>
                </StackPanel>
            </Grid>

            <Button Style="{DynamicResource Start_Button_Style}" 
                    x:Name="Start_Button" Grid.Row="2" 
                    Click="Start_Button_Click"
                    Content="开始召唤" Margin="2" Padding="8"/>
        </Grid>
    </Grid>

</Window>

